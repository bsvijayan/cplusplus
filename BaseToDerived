class Base{
    public:
    void virtual baseFn(){printf("Base V");};
};
class Derived:public Base{
  public:
     void virtual V2(){};
     void  baseFn(){printf("Derived D");};
};
int main()
{
    Derived *d,der;
   Base b1,*bPtr;
   
  // d=&b1; //Upcasting won't work
   //Output main.cpp:23:6: error: invalid conversion from ‘Base*’ to ‘Derived*’ [-fpermissive]Invalid conversion from Based to Derived
   //d->baseFn();
   
    bPtr=&der;
   bPtr->baseFn();//Answer Prints Derived D
    return 0;
}
